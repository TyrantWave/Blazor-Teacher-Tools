@page "/wotd"
@using TeacherTools.Services;
@inject WordInfoService wordInfoService;

<div class="container-fluid">
    <div class="row">   
        <h1 class="col">
            Word of the Day
        </h1> 
    </div>
@if (word == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col ">
            <div class="jumbotron">
                <div class="container text-center">
                    <h1 class="display-3 text-primary">
                        @word.Word
                    </h1>
                    <p class="lead">
                    @foreach (var s in word.Syllables.List)
                    {
                        @if (s != word.Syllables.List.First())
                        {
                            <span>&middot;</span>
                        }
                        @s
                    }
                    </p>
                    @if (word.Pronunciation != null)
                    {
                    <p class="lead">
                        @if (word.Pronunciation.All != null)
                        {
                            <span class="badge badge-info">Common</span> @word.Pronunciation.All
                        }
                        &nbsp;
                        @if (word.Pronunciation.Noun != null)
                        {
                            <span class="badge badge-info">Noun</span> @word.Pronunciation.Noun
                        }
                        &nbsp;
                        @if (word.Pronunciation.Verb != null)
                        {
                            <span class="badge badge-info">Verb</span> @word.Pronunciation.Verb
                        }
                    </p>
                    }
                </div>
            </div>
        </div>
    </div>
    @if (word.Results != null)
    {
        @foreach (var result in word.Results)
        {
            <div class="row mb-2">
                <div class="col">
                    <div class="card border-primary">
                        <div class="card-header">
                            <h2>
                                <span class="badge badge-primary"><em>@result.PartOfSpeech</em></span> @result.Definition
                            </h2>
                        </div>
            <div class="card-body">
            @if (result.Examples != null)
            {
                <h3 class="ma-2">Examples</h3>
                <ul class="list-group">
                @foreach (var example in result.Examples)
                {
                    <li class="list-group-item">
                        @example
                    </li>
                }
                </ul>
            }
            @if (result.Synonyms != null)
            {
                <h3 class="ma-2">Synonyms</h3>
                @foreach (var s in result.Synonyms)
                {
                    <span class="badge badge-secondary tag">@s</span>
                }
            }
            @if (result.TypeOf != null)
            {
                <h3 class="ma-2">See Also</h3>
                @foreach (var t in result.TypeOf)
                {
                    <span class="badge badge-secondary tag">@t</span>
                }
            }
                
            </div>
                    </div>
                </div>
            </div>
        }
    }

    @if (word.Frequency != null)
    {
        <div class="row">
            <div class="col">
                <h2>
                    Word Frequency: <span class="badge badge-success">@word.Frequency</span>
                </h2>
            </div>
        </div>
    }
}
</div>

@functions {
    WordInfo word;

    protected override async Task OnInitAsync()
    {
        word = await wordInfoService.GetWordAsync();
    }
}